{"ast":null,"code":"/* eslint-disable camelcase */\nconst {\n  format\n} = require('util');\n\nconst assign = require('lodash/assign');\n\nconst makeError = require('make-error');\n\nfunction OPError({\n  error_description,\n  error,\n  error_uri,\n  session_state,\n  state,\n  scope\n}, response) {\n  OPError.super.call(this, !error_description ? error : `${error} (${error_description})`);\n  assign(this, {\n    error\n  }, error_description && {\n    error_description\n  }, error_uri && {\n    error_uri\n  }, state && {\n    state\n  }, scope && {\n    scope\n  }, session_state && {\n    session_state\n  });\n\n  if (response) {\n    Object.defineProperty(this, 'response', {\n      value: response\n    });\n  }\n}\n\nmakeError(OPError);\n\nfunction RPError(...args) {\n  if (typeof args[0] === 'string') {\n    RPError.super.call(this, format(...args));\n  } else {\n    const {\n      message,\n      printf,\n      response,\n      ...rest\n    } = args[0];\n\n    if (printf) {\n      RPError.super.call(this, format(...printf));\n    } else {\n      RPError.super.call(this, message);\n    }\n\n    assign(this, rest);\n\n    if (response) {\n      Object.defineProperty(this, 'response', {\n        value: response\n      });\n    }\n  }\n}\n\nmakeError(RPError);\nmodule.exports = {\n  OPError,\n  RPError\n};","map":{"version":3,"sources":["/Users/veronica/Documents/react-portfolio-2021/portfolio-2021/node_modules/openid-client/lib/errors.js"],"names":["format","require","assign","makeError","OPError","error_description","error","error_uri","session_state","state","scope","response","super","call","Object","defineProperty","value","RPError","args","message","printf","rest","module","exports"],"mappings":"AAAA;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,MAAD,CAA1B;;AAEA,MAAMC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAAtB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAzB;;AAEA,SAASG,OAAT,CAAiB;AACfC,EAAAA,iBADe;AAEfC,EAAAA,KAFe;AAGfC,EAAAA,SAHe;AAIfC,EAAAA,aAJe;AAKfC,EAAAA,KALe;AAMfC,EAAAA;AANe,CAAjB,EAOGC,QAPH,EAOa;AACXP,EAAAA,OAAO,CAACQ,KAAR,CAAcC,IAAd,CAAmB,IAAnB,EAAyB,CAACR,iBAAD,GAAqBC,KAArB,GAA8B,GAAEA,KAAM,KAAID,iBAAkB,GAArF;AAEAH,EAAAA,MAAM,CACJ,IADI,EAEJ;AAAEI,IAAAA;AAAF,GAFI,EAGHD,iBAAiB,IAAI;AAAEA,IAAAA;AAAF,GAHlB,EAIHE,SAAS,IAAI;AAAEA,IAAAA;AAAF,GAJV,EAKHE,KAAK,IAAI;AAAEA,IAAAA;AAAF,GALN,EAMHC,KAAK,IAAI;AAAEA,IAAAA;AAAF,GANN,EAOHF,aAAa,IAAI;AAAEA,IAAAA;AAAF,GAPd,CAAN;;AAUA,MAAIG,QAAJ,EAAc;AACZG,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,UAA5B,EAAwC;AACtCC,MAAAA,KAAK,EAAEL;AAD+B,KAAxC;AAGD;AACF;;AAEDR,SAAS,CAACC,OAAD,CAAT;;AAEA,SAASa,OAAT,CAAiB,GAAGC,IAApB,EAA0B;AACxB,MAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC/BD,IAAAA,OAAO,CAACL,KAAR,CAAcC,IAAd,CAAmB,IAAnB,EAAyBb,MAAM,CAAC,GAAGkB,IAAJ,CAA/B;AACD,GAFD,MAEO;AACL,UAAM;AACJC,MAAAA,OADI;AACKC,MAAAA,MADL;AACaT,MAAAA,QADb;AACuB,SAAGU;AAD1B,QAEFH,IAAI,CAAC,CAAD,CAFR;;AAGA,QAAIE,MAAJ,EAAY;AACVH,MAAAA,OAAO,CAACL,KAAR,CAAcC,IAAd,CAAmB,IAAnB,EAAyBb,MAAM,CAAC,GAAGoB,MAAJ,CAA/B;AACD,KAFD,MAEO;AACLH,MAAAA,OAAO,CAACL,KAAR,CAAcC,IAAd,CAAmB,IAAnB,EAAyBM,OAAzB;AACD;;AACDjB,IAAAA,MAAM,CAAC,IAAD,EAAOmB,IAAP,CAAN;;AACA,QAAIV,QAAJ,EAAc;AACZG,MAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,UAA5B,EAAwC;AACtCC,QAAAA,KAAK,EAAEL;AAD+B,OAAxC;AAGD;AACF;AACF;;AAEDR,SAAS,CAACc,OAAD,CAAT;AAEAK,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,OADe;AAEfa,EAAAA;AAFe,CAAjB","sourcesContent":["/* eslint-disable camelcase */\nconst { format } = require('util');\n\nconst assign = require('lodash/assign');\nconst makeError = require('make-error');\n\nfunction OPError({\n  error_description,\n  error,\n  error_uri,\n  session_state,\n  state,\n  scope,\n}, response) {\n  OPError.super.call(this, !error_description ? error : `${error} (${error_description})`);\n\n  assign(\n    this,\n    { error },\n    (error_description && { error_description }),\n    (error_uri && { error_uri }),\n    (state && { state }),\n    (scope && { scope }),\n    (session_state && { session_state }),\n  );\n\n  if (response) {\n    Object.defineProperty(this, 'response', {\n      value: response,\n    });\n  }\n}\n\nmakeError(OPError);\n\nfunction RPError(...args) {\n  if (typeof args[0] === 'string') {\n    RPError.super.call(this, format(...args));\n  } else {\n    const {\n      message, printf, response, ...rest\n    } = args[0];\n    if (printf) {\n      RPError.super.call(this, format(...printf));\n    } else {\n      RPError.super.call(this, message);\n    }\n    assign(this, rest);\n    if (response) {\n      Object.defineProperty(this, 'response', {\n        value: response,\n      });\n    }\n  }\n}\n\nmakeError(RPError);\n\nmodule.exports = {\n  OPError,\n  RPError,\n};\n"]},"metadata":{},"sourceType":"script"}